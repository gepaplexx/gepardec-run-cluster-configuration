---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: alertmanager
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "alertmanager | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "alertmanager | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "alertmanager | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "alertmanager | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "alertmanager | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "alertmanager | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "alertmanager | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "alertmanager | sync-succeeded"
spec:
  destination:
    namespace: openshift-user-workload-monitoring
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-alertmanager
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 0.1.*
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager-route-extension
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "cert-manager-route-extension | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "cert-manager-route-extension | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "cert-manager-route-extension | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "cert-manager-route-extension | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "cert-manager-route-extension | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "cert-manager-route-extension | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "cert-manager-route-extension | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "cert-manager-route-extension | sync-succeeded"
spec:
  destination:
    namespace: syn-cert-manager
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-cert-manager-routes
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 0.1.*
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=false
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cicd-eventbus
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "cicd-eventbus | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "cicd-eventbus | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "cicd-eventbus | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "cicd-eventbus | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "cicd-eventbus | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "cicd-eventbus | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "cicd-eventbus | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "cicd-eventbus | sync-succeeded"
spec:
  destination:
    namespace: gp-cicd-eventbus
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-cicd-eventbus
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 1.0.*
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cicd-tools
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "cicd-tools | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "cicd-tools | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "cicd-tools | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "cicd-tools | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "cicd-tools | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "cicd-tools | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "cicd-tools | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "cicd-tools | sync-succeeded"
spec:
  destination:
    namespace: gp-cicd-tools
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-cicd-tools
    helm:
      parameters:
      - name: clustername
        value: play
      - name: argo_workflows.rbac.clusterscoped.enabled
        value: "true"
      - name: argo_workflows.server.sso.issuer
        value: https://sso.play.run.gepardec.com/realms/internal
      - name: argo_workflows.server.sso.redirectUrl
        value: https://workflows.play.run.gepardec.com/oauth2/callback
      - name: argo_workflows.artifactRepository.s3.bucket
        value: c-gepa-play-argo-workflows
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 1.7.*
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets-configuration
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "external-secrets-configuration | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "external-secrets-configuration | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "external-secrets-configuration | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "external-secrets-configuration | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "external-secrets-configuration | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "external-secrets-configuration | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "external-secrets-configuration | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "external-secrets-configuration | sync-succeeded"
spec:
  destination:
    namespace: gp-external-secrets
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-external-secrets-configuration
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 1.0.*
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=false
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gepardec-run-cicd
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "gepardec-run-cicd | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "gepardec-run-cicd | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "gepardec-run-cicd | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "gepardec-run-cicd | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "gepardec-run-cicd | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "gepardec-run-cicd | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "gepardec-run-cicd | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "gepardec-run-cicd | sync-succeeded"
spec:
  destination:
    namespace: gepardec-run-gitops
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    path: clusters/play/applications
    repoURL: git@github.com:gepaplexx/gepaplexx-cicd.git
    targetRevision: main
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=false
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-dashboards
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "grafana-dashboards | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "grafana-dashboards | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "grafana-dashboards | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "grafana-dashboards | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "grafana-dashboards | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "grafana-dashboards | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "grafana-dashboards | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "grafana-dashboards | sync-succeeded"
spec:
  destination:
    namespace: gp-grafana
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    directory:
      include: '{all/*,play/*}'
      recurse: true
    path: observability/dashboards/
    repoURL: https://github.com/gepaplexx/gepardec-run-cluster-configuration
    targetRevision: main
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-instance
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "grafana-instance | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "grafana-instance | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "grafana-instance | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "grafana-instance | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "grafana-instance | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "grafana-instance | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "grafana-instance | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "grafana-instance | sync-succeeded"
spec:
  destination:
    namespace: gp-grafana
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-grafana-instance
    helm:
      parameters:
      - name: ingress.hostname
        value: grafana.play.run.gepardec.com
      - name: sso.keycloak.realmUrl
        value: https://sso.play.run.gepardec.com/realms/internal
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 1.1.*
  ignoreDifferences:
    - group: grafana.integreatly.org
      jsonPointers:
      - /spec/config/auth.generic_oauth/client_secret
      kind: Grafana
    - group: grafana.integreatly.org
      jsonPointers:
      - /spec/datasource/secureJsonData/httpHeaderValue1
      kind: GrafanaDatasource
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloak-instance
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "keycloak-instance | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "keycloak-instance | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "keycloak-instance | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "keycloak-instance | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "keycloak-instance | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "keycloak-instance | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "keycloak-instance | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "keycloak-instance | sync-succeeded"
spec:
  destination:
    namespace: gp-sso
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-keycloak-instance
    helm:
      parameters:
      - name: ingress.hostname
        value: sso.play.run.gepardec.com
      - name: keycloakConfigCli.enabled
        value: "true"
      - name: keycloakConfigCli.cluster
        value: play
      - name: keycloakConfigCli.identityProvider.openshift.baseUrl
        value: https://api.c-gepa-play.gepa.vshnmanaged.net:6443
      - name: backup.external.bucket
        value: c-gepa-play-keycloak-backup
      - name: backup.external.enabled
        value: "true"
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 1.4.*
  ignoreDifferences:
    - group: oauth.openshift.io
      jsonPointers:
      - /secret
      kind: OAuthClient
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=false
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: multena
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "multena | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "multena | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "multena | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "multena | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "multena | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "multena | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "multena | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "multena | sync-succeeded"
spec:
  destination:
    namespace: gp-grafana
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-multena
    helm:
      parameters:
      - name: multena.web.jwksCertUrl
        value: https://sso.play.run.gepardec.com/realms/internal/protocol/openid-connect/certs
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 1.5.*
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=false
      - ServerSideApply=false
...
---
# Source: gp-cluster-setup/templates/02-argo-application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: private-bin
  finalizers:
  - "resources-finalizer.argocd.argoproj.io"
  annotations:
    notifications.argoproj.io/subscribe.on-created.grafana: "private-bin | created"
    notifications.argoproj.io/subscribe.on-deleted.grafana: "private-bin | deleted"
    notifications.argoproj.io/subscribe.on-deployed.grafana: "private-bin | deployed"
    notifications.argoproj.io/subscribe.on-health-degraded.grafana: "private-bin | degraded"
    notifications.argoproj.io/subscribe.on-sync-failed.grafana: "private-bin | sync-failed"
    notifications.argoproj.io/subscribe.on-sync-running.grafana: "private-bin | sync-running"
    notifications.argoproj.io/subscribe.on-sync-status-unknown.grafana: "private-bin | sync-status-unknown"
    notifications.argoproj.io/subscribe.on-sync-succeeded.grafana: "private-bin | sync-succeeded"
spec:
  destination:
    namespace: gp-privatebin
    server: 'https://kubernetes.default.svc'
  project: gepardec-run
  source:
    chart: gp-privatebin
    helm:
      parameters:
      - name: ingress.hostname
        value: secret.play.run.gepardec.com
    repoURL: https://gepaplexx.github.io/gp-helm-charts/
    targetRevision: 0.1.*
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=false
      - ServerSideApply=false
...
